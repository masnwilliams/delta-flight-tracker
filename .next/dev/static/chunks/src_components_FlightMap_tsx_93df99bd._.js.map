{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/mason/GitHub/delta-flight-tracker/src/components/FlightMap.tsx"],"sourcesContent":["'use client';\n\nimport type { FlightData } from '@/lib/types';\nimport { MapContainer, TileLayer, Polyline, CircleMarker, Marker, Tooltip } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\ninterface FlightMapProps {\n  flight: FlightData;\n}\n\nexport function FlightMap({ flight }: FlightMapProps) {\n  // Airport coordinates\n  // KSLC: Salt Lake City\n  const origin: [number, number] = [40.7884, -111.9778];\n  // KCVG: Cincinnati\n  const destination: [number, number] = [39.0488, -84.6678];\n  \n  // Current plane position\n  const planePosition: [number, number] = [flight.latitude, flight.longitude];\n  \n  // Calculate center point between origin and destination\n  const center: [number, number] = [\n    (origin[0] + destination[0]) / 2,\n    (origin[1] + destination[1]) / 2\n  ];\n\n  // Create airplane icon with rotation\n  const planeIcon = divIcon({\n    html: `\n      <div style=\"transform: rotate(${flight.heading}deg); transform-origin: center;\">\n        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15 5 L12 18 L10 18 L10 22 L12 22 L12 20 L18 20 L18 22 L20 22 L20 18 L18 18 L15 5Z\" \n                fill=\"white\" stroke=\"#60a5fa\" stroke-width=\"1.5\" \n                filter=\"drop-shadow(0 0 6px #60a5fa)\"/>\n        </svg>\n      </div>\n    `,\n    className: 'plane-marker',\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n  });\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-2xl p-6 border border-white/20\">\n      <h2 className=\"text-2xl font-bold mb-4\">Flight Path</h2>\n      <div className=\"relative w-full h-96 rounded-xl overflow-hidden\">\n        <MapContainer\n          center={center}\n          zoom={5}\n          style={{ height: '100%', width: '100%' }}\n          zoomControl={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {/* Flight path line */}\n          <Polyline\n            positions={[origin, destination]}\n            pathOptions={{\n              color: '#60a5fa',\n              weight: 3,\n              opacity: 0.6,\n              dashArray: '10, 10'\n            }}\n          />\n          \n          {/* Origin airport marker */}\n          <CircleMarker\n            center={origin}\n            radius={8}\n            pathOptions={{\n              fillColor: '#22c55e',\n              fillOpacity: 1,\n              color: 'white',\n              weight: 2\n            }}\n          >\n            <Tooltip permanent direction=\"bottom\" offset={[0, 10]}>\n              SLC (Origin)\n            </Tooltip>\n          </CircleMarker>\n          \n          {/* Destination airport marker */}\n          <CircleMarker\n            center={destination}\n            radius={8}\n            pathOptions={{\n              fillColor: '#ef4444',\n              fillOpacity: 1,\n              color: 'white',\n              weight: 2\n            }}\n          >\n            <Tooltip permanent direction=\"bottom\" offset={[0, 10]}>\n              CVG (Destination)\n            </Tooltip>\n          </CircleMarker>\n          \n          {/* Airplane current position */}\n          <Marker position={planePosition} icon={planeIcon}>\n            <Tooltip direction=\"top\" offset={[0, -15]}>\n              {flight.latitude.toFixed(4)}°N, {Math.abs(flight.longitude).toFixed(4)}°W\n              <br />\n              Alt: {flight.altitude.toLocaleString()} ft\n              <br />\n              Speed: {flight.groundspeed} kts\n            </Tooltip>\n          </Marker>\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAWO,SAAS,UAAU,EAAE,MAAM,EAAkB;IAClD,sBAAsB;IACtB,uBAAuB;IACvB,MAAM,SAA2B;QAAC;QAAS,CAAC;KAAS;IACrD,mBAAmB;IACnB,MAAM,cAAgC;QAAC;QAAS,CAAC;KAAQ;IAEzD,yBAAyB;IACzB,MAAM,gBAAkC;QAAC,OAAO,QAAQ;QAAE,OAAO,SAAS;KAAC;IAE3E,wDAAwD;IACxD,MAAM,SAA2B;QAC/B,CAAC,MAAM,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,IAAI;QAC/B,CAAC,MAAM,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,IAAI;KAChC;IAED,qCAAqC;IACrC,MAAM,YAAY,IAAA,+JAAO,EAAC;QACxB,MAAM,CAAC;oCACyB,EAAE,OAAO,OAAO,CAAC;;;;;;;IAOjD,CAAC;QACD,WAAW;QACX,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;IACtB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,0KAAY;oBACX,QAAQ;oBACR,MAAM;oBACN,OAAO;wBAAE,QAAQ;wBAAQ,OAAO;oBAAO;oBACvC,aAAa;;sCAEb,6LAAC,oKAAS;4BACR,aAAY;4BACZ,KAAI;;;;;;sCAIN,6LAAC,kKAAQ;4BACP,WAAW;gCAAC;gCAAQ;6BAAY;4BAChC,aAAa;gCACX,OAAO;gCACP,QAAQ;gCACR,SAAS;gCACT,WAAW;4BACb;;;;;;sCAIF,6LAAC,0KAAY;4BACX,QAAQ;4BACR,QAAQ;4BACR,aAAa;gCACX,WAAW;gCACX,aAAa;gCACb,OAAO;gCACP,QAAQ;4BACV;sCAEA,cAAA,6LAAC,gKAAO;gCAAC,SAAS;gCAAC,WAAU;gCAAS,QAAQ;oCAAC;oCAAG;iCAAG;0CAAE;;;;;;;;;;;sCAMzD,6LAAC,0KAAY;4BACX,QAAQ;4BACR,QAAQ;4BACR,aAAa;gCACX,WAAW;gCACX,aAAa;gCACb,OAAO;gCACP,QAAQ;4BACV;sCAEA,cAAA,6LAAC,gKAAO;gCAAC,SAAS;gCAAC,WAAU;gCAAS,QAAQ;oCAAC;oCAAG;iCAAG;0CAAE;;;;;;;;;;;sCAMzD,6LAAC,8JAAM;4BAAC,UAAU;4BAAe,MAAM;sCACrC,cAAA,6LAAC,gKAAO;gCAAC,WAAU;gCAAM,QAAQ;oCAAC;oCAAG,CAAC;iCAAG;;oCACtC,OAAO,QAAQ,CAAC,OAAO,CAAC;oCAAG;oCAAK,KAAK,GAAG,CAAC,OAAO,SAAS,EAAE,OAAO,CAAC;oCAAG;kDACvE,6LAAC;;;;;oCAAK;oCACA,OAAO,QAAQ,CAAC,cAAc;oCAAG;kDACvC,6LAAC;;;;;oCAAK;oCACE,OAAO,WAAW;oCAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzC;KAxGgB","debugId":null}}]
}