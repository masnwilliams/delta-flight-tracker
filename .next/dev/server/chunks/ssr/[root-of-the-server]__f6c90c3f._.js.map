{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/mason/GitHub/delta-flight-tracker/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { FlightData, WeatherData, ServicesData } from '@/lib/types';\nimport { FlightStats } from '@/components/FlightStats';\nimport { FlightMap } from '@/components/FlightMap';\nimport { WeatherCard } from '@/components/WeatherCard';\nimport { ServicesPanel } from '@/components/ServicesPanel';\n\nexport default function Home() {\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [servicesData, setServicesData] = useState<ServicesData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  const fetchData = async () => {\n    try {\n      const [flightRes, weatherRes, servicesRes] = await Promise.all([\n        fetch('/api/flight'),\n        fetch('/api/weather'),\n        fetch('/api/services'),\n      ]);\n\n      if (!flightRes.ok || !weatherRes.ok || !servicesRes.ok) {\n        throw new Error('Failed to fetch data');\n      }\n\n      const [flight, weather, services] = await Promise.all([\n        flightRes.json(),\n        weatherRes.json(),\n        servicesRes.json(),\n      ]);\n\n      setFlightData(flight);\n      setWeatherData(weather);\n      setServicesData(services);\n      setLastUpdate(new Date());\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    \n    // Refresh every 5 seconds\n    const interval = setInterval(fetchData, 5000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">✈️</div>\n          <div className=\"text-xl font-semibold\">Loading flight data...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !flightData || !weatherData || !servicesData) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center bg-red-500/20 border border-red-500/50 rounded-2xl p-8 max-w-md\">\n          <div className=\"text-4xl mb-4\">⚠️</div>\n          <div className=\"text-xl font-semibold mb-2\">Connection Error</div>\n          <div className=\"text-white/60 mb-4\">\n            {error || 'Unable to connect to Delta WiFi. Make sure you are connected to the in-flight network.'}\n          </div>\n          <button\n            onClick={fetchData}\n            className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 rounded-lg font-semibold transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <main className=\"min-h-screen p-4 md:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8 text-center\">\n          <div className=\"text-5xl mb-4\">✈️</div>\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-2\">\n            Delta Flight Tracker\n          </h1>\n          <p className=\"text-white/60\">\n            Real-time flight information • Updates every 5 seconds\n          </p>\n          <div className=\"mt-2 text-sm text-white/40\">\n            Last updated: {lastUpdate.toLocaleTimeString()}\n          </div>\n        </div>\n\n        {/* Main Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6\">\n          {/* Left Column - Flight Stats */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            <FlightStats flight={flightData} />\n            <FlightMap flight={flightData} />\n          </div>\n\n          {/* Right Column - Weather & Services */}\n          <div className=\"space-y-6\">\n            <WeatherCard weather={weatherData} />\n            <ServicesPanel services={servicesData} />\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"text-center text-xs text-white/40 mt-8\">\n          <p>Data provided by Delta Air Lines in-flight WiFi system</p>\n          <p className=\"mt-1\">Built with Next.js • Not affiliated with Delta Air Lines</p>\n        </div>\n      </div>\n    </main>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAFA;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAoB;IAChE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAqB;IACnE,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAsB;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAO,IAAI;IAEvD,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,CAAC,WAAW,YAAY,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;gBAC7D,MAAM;gBACN,MAAM;gBACN,MAAM;aACP;YAED,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE;gBACtD,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,CAAC,QAAQ,SAAS,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACpD,UAAU,IAAI;gBACd,WAAW,IAAI;gBACf,YAAY,IAAI;aACjB;YAED,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,cAAc,IAAI;YAClB,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;QAEA,0BAA0B;QAC1B,MAAM,WAAW,YAAY,WAAW;QAExC,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,8OAAC;wBAAI,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI/C;IAEA,IAAI,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC,cAAc;QACzD,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,8OAAC;wBAAI,WAAU;kCAA6B;;;;;;kCAC5C,8OAAC;wBAAI,WAAU;kCACZ,SAAS;;;;;;kCAEZ,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCAAgB;;;;;;sCAC/B,8OAAC;4BAAG,WAAU;sCAAsC;;;;;;sCAGpD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAG7B,8OAAC;4BAAI,WAAU;;gCAA6B;gCAC3B,WAAW,kBAAkB;;;;;;;;;;;;;8BAKhD,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAY,QAAQ;;;;;;8CACrB,8OAAC;oCAAU,QAAQ;;;;;;;;;;;;sCAIrB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAY,SAAS;;;;;;8CACtB,8OAAC;oCAAc,UAAU;;;;;;;;;;;;;;;;;;8BAK7B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;sCAAE;;;;;;sCACH,8OAAC;4BAAE,WAAU;sCAAO;;;;;;;;;;;;;;;;;;;;;;;AAK9B","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/mason/GitHub/delta-flight-tracker/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/mason/GitHub/delta-flight-tracker/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///Users/mason/GitHub/delta-flight-tracker/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}